import React, { useState } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { useAdmin } from './AdminContext.jsx';

export default function AdminSidebar() {
  const [collapsed, setCollapsed] = useState(false);
  const location = useLocation();
  const { user, logout } = useAdmin();

  const menuItems = [
    {
      to: '/admin/dashboard',
      icon: 'üìä',
      label: '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
      description: '–û–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã –∏ –º–µ—Ç—Ä–∏–∫–∏'
    },
    {
      to: '/admin/upload',
      icon: 'üì§',
      label: '–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
      description: '–ú–æ–¥–µ–ª–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'
    },
    {
      to: '/admin/models',
      icon: 'üéØ',
      label: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º',
      description: 'CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏'
    },
    {
      to: '/admin/stats',
      icon: 'üìà',
      label: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
      description: '–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞'
    },
    {
      to: '/admin/compilation',
      icon: 'üîß',
      label: 'MindAR –ö–æ–º–ø–∏–ª—è—Ü–∏—è',
      description: '–ö–æ–º–ø–∏–ª—è—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π'
    }
  ];

  return (
    <aside className={`admin-sidebar ${collapsed ? 'collapsed' : ''}`}>
      <div className="sidebar-header">
        <button 
          className="sidebar-toggle"
          onClick={() => setCollapsed(!collapsed)}
        >
          {collapsed ? '‚ü∂' : '‚üµ'}
        </button>
        
        {!collapsed && (
          <div className="admin-brand">
            <div className="brand-icon">üèõÔ∏è</div>
            <div className="brand-text">
              <h2>AR Manager</h2>
              <p>Admin Panel</p>
            </div>
          </div>
        )}
      </div>

      <nav className="sidebar-nav">
        {menuItems.map((item) => {
          const isActive = location.pathname === item.to;
          return (
            <Link
              key={item.to}
              to={item.to}
              className={`nav-item ${isActive ? 'active' : ''}`}
            >
              <span className="nav-icon">{item.icon}</span>
              {!collapsed && (
                <div className="nav-content">
                  <span className="nav-label">{item.label}</span>
                  <span className="nav-description">{item.description}</span>
                </div>
              )}
            </Link>
          );
        })}
      </nav>

      <div className="sidebar-footer">
        {!collapsed && (
          <div className="user-info">
            <div className="user-avatar">üë§</div>
            <div className="user-details">
              <p className="user-email">{user?.email || 'admin@admin.com'}</p>
              <p className="user-role">{user?.role || 'administrator'}</p>
            </div>
          </div>
        )}
        
        <button 
          className="logout-button"
          onClick={logout}
          title={collapsed ? '–í—ã–π—Ç–∏' : undefined}
        >
          <span className="logout-icon">üö™</span>
          {!collapsed && <span>–í—ã–π—Ç–∏</span>}
        </button>
      </div>
    </aside>
  );
}
